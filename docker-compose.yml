services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: meditrack-db
    environment:
      POSTGRES_DB: meditrack
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: meditrack-backend
    environment:
      DATABASE_URL: postgresql://postgres:admin@db:5432/meditrack
      SECRET_KEY: your-super-secret-key-here-make-it-long-and-random
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 300000000
      BACKEND_URL: http://localhost:8000
      BACKEND_CORS_ORIGINS: http://localhost:3000
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_USER: postgres
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: meditrack-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NEXT_PUBLIC_API_URL_DOCKER: http://backend:8000
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: "1mfjv+1FrbRHWsZKvaPIS1NL4To2zS6TumsrxCJdXAk="
      AUTH_SECRET: "1mfjv+1FrbRHWsZKvaPIS1NL4To2zS6TumsrxCJdXAk="
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  postgres_data:
  backend_uploads: